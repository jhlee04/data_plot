import pandas as pd

# CSV 로드
df = pd.read_csv('core_issues_full.csv')

# 요약 및 키워드 추출용 프롬프트 생성
def make_prompt(summary_text):
    return f"""다음은 한 주간의 핵심 현안 보고 내용입니다.
아래 입력을 참고해서 다음 두 가지를 생성해줘:

1. 'short_summary': 한 문장 요약 (문제 + 대응 요약, 50자 이내)
2. 'keywords': 핵심 키워드 3~5개 (쉼표로 구분)

[예시]
입력:
신규 장비 도입 후 수율이 낮게 유지되고 있음.  
설비 온도 조건이 원인으로 추정되어 설정값 변경을 적용 중이다.

출력:
short_summary: 신규 장비 수율 저하, 온도 설정 조정 중  
keywords: 수율, 장비, 온도, 설정값

[입력]
{summary_text.strip()}

[출력]
short_summary:
keywords:
"""

# LLM 호출 시뮬레이션 (→ 실제 내부 LLM 호출 함수로 바꾸면 됨)
def fake_llm_call(prompt):
    # 아주 단순화한 예시 응답
    return {
        'short_summary': "요약 예시입니다.",
        'keywords': "수율, 장비, 공정"
    }

# 실제 내부 LLM 호출 함수 (예시)
def real_llm_call(prompt):
    response = 내부_LLM_API_호출(prompt)
    return {
        'short_summary': response['요약값'],
        'keywords': response['키워드값']
    }

# 결과 저장용 리스트
short_summaries = []
keywords = []

# 행 순회하며 요약 및 키워드 추출
for idx, row in df.iterrows():
    summary_text = row['summary']
    prompt = make_prompt(summary_text)
    result = fake_llm_call(prompt)  # → 실제 LLM 호출로 대체
    short_summaries.append(result['short_summary'])
    keywords.append(result['keywords'])

# 결과 컬럼 추가
df['short_summary'] = short_summaries
df['keywords'] = keywords

# 저장
df.to_csv('core_issues_augmented.csv', index=False, encoding='utf-8-sig')