import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.gridspec as gridspec

# 예시 데이터
data = {
    '질문1': [75, 50, 100, 100, 50, 75, 25, 0, 50, 75],
    '질문2': [100, 75, 75, 50, 25, 25, 0, 0, 100, 50],
    '질문3': [50, 25, 0, 25, 50, 75, 100, 100, 75, 50]
}
df = pd.DataFrame(data)

# 점수 및 색상 정의
scores = [0, 25, 50, 75, 100]
colors = {
    0: '#4D4D4D',     # 진한 회색
    25: '#B0B0B0',    # 밝은 회색
    50: '#D9D9D9',    # 더 밝은 회색
    75: '#FDAE6B',    # 밝은 오렌지
    100: '#F16913'    # 진한 오렌지
}

# 시각화용 함수
def calculate_distribution(df, question):
    counts = df[question].value_counts()
    percent = counts / counts.sum() * 100
    # 누락 점수 채우기
    dist = {
        score: {
            "count": counts.get(score, 0),
            "percent": percent.get(score, 0)
        }
        for score in scores
    }
    return dist

# 시각화 시작
fig = plt.figure(figsize=(10, 6))
gs = gridspec.GridSpec(3, 1, height_ratios=[1, 1, 1], hspace=0.5)

for i, question in enumerate(df.columns):
    ax = plt.subplot(gs[i])
    dist = calculate_distribution(df, question)

    left = 0
    total = sum([dist[score]["count"] for score in scores])
    for score in scores:
        val = dist[score]["percent"]
        count = dist[score]["count"]
        ax.barh(0, val, left=left, height=0.6, color=colors[score])

        # 내부 텍스트: 50, 75, 100점만 표시
        if score in [50, 75, 100] and val > 3:
            ax.text(left + val / 2, 0, f'{val:.1f}% ({count}명)', va='center',
                    ha='center', color='white', fontsize=9, fontweight='bold')

        left += val

    # 긍정 응답률 (75 + 100점)
    pos_percent = dist[75]["percent"] + dist[100]["percent"]
    ax.text(102, 0, f'긍정 응답율: {pos_percent:.1f}%', va='center',
            fontsize=10, fontweight='bold', color='black')

    # 기본 레이아웃 설정
    ax.set_xlim(0, 100)
    ax.set_ylim(-0.5, 0.5)
    ax.set_yticks([])
    ax.set_xticks([0, 100])
    ax.set_xticklabels(['매우 공감하지 않는다', '매우 공감한다'], fontweight='bold')
    ax.set_title(f"{question} 점수 분포", fontsize=12, loc='left')

    for spine in ['top', 'right', 'left', 'bottom']:
        ax.spines[spine].set_visible(False)

plt.tight_layout()
plt.show()