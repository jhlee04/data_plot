# 기존 스타일을 따라 Resource vs Impact 버블맵 생성
new_df = df
# 1. Resource, Impact 좌표에 대해 원형 오프셋 적용
new_df['Impact_shifted'] = new_df.apply(lambda r: r['Impact'] + radius * np.cos(angle_map[r['Category']]), axis=1)
new_df['Resource_shifted'] = new_df.apply(lambda r: r['Resource'] + radius * np.sin(angle_map[r['Category']]), axis=1)

# 2. 버블 데이터 생성
new_df['Coord'] = list(zip(new_df['Resource_shifted'], new_df['Impact_shifted'], new_df['Category']))
bubble_data_ri = new_df.groupby('Coord').size().reset_index(name='Count')
bubble_data_ri[['Resource_shifted', 'Impact_shifted', 'Category']] = pd.DataFrame(
    bubble_data_ri['Coord'].tolist(), index=bubble_data_ri.index
)

# 3. 버블 차트 시각화
plt.figure(figsize=(6.5, 5.5))
ax = plt.gca()

# 배경 강조 사각형 (예: 자율 설정 범위)
quad_rect = patches.Rectangle((2.5, 2.5), 3, 3, facecolor='lightgreen', edgecolor='lime', linewidth=3, alpha=0.25)
ax.add_patch(quad_rect)

# 카테고리별 점 찍기
for category in unique_categories:
    sub = bubble_data_ri[bubble_data_ri['Category'] == category]
    plt.scatter(
        sub['Resource_shifted'],
        sub['Impact_shifted'],
        s=sub['Count'] * 100,
        alpha=0.7,
        color=category_colors[category],
        edgecolors='none',
        label=category
    )

# 스타일
plt.xlabel("Resource", fontsize=14)
plt.ylabel("Impact", fontsize=14)
plt.xticks(range(1, 6), fontsize=12)
plt.yticks(range(1, 6), fontsize=12)
plt.grid(True, linestyle='--', alpha=0.5)
plt.legend(title="", bbox_to_anchor=(1.05, 1), loc='upper left', fontsize=11, frameon=False)
ax.set_aspect('equal')
plt.tight_layout()
plt.show()
